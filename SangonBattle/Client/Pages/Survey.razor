@page "/survey"
@inject SurveyRepository _serveyRepository
@inject NavigationManager _navigationManager


<div class="container">
    <div class="row justify-content-center text-center">
        <p>
            <span class="h3">
                Survey<br />
                <span class="h4">최대한 솔직하게 답변해주세요!</span>
            </span><br /><br />
            No &lt;--------------------&gt; yes
        </p>
    </div>

    @foreach (var question in _questions)
    {
        <SurveyQuestion Question="question" OnAnswered="OnAnswered" />
    }

    <div class="mb-5 row justify-content-center">
        <button type="button" class="btn btn-info"
                disabled="@(!_allQuestionsAnswered)"
                @onclick="Submit">
            완료
        </button>
    </div>
</div>


@code {
    private List<Question> _questions = new List<Question>();
    private Dictionary<int, Submission> _submissions = new Dictionary<int, Submission>();
    private bool _allQuestionsAnswered = false;

    protected override async Task OnInitializedAsync()
    {
        _questions = await _serveyRepository.GetQuestions();
    }

    private void OnAnswered(Submission submission)
    {
        if (_submissions.ContainsKey(submission.QuestionId))
        {
            _submissions[submission.QuestionId] = submission;
        }
        else
        {
            _submissions.Add(submission.QuestionId, submission);
        }

        if (_submissions.Count == _questions.Count)
        {
            _allQuestionsAnswered = true;
        }
    }

    private async Task Submit()
    {
        foreach (var key in _submissions.Keys)
        {
            Console.WriteLine($"{key} : {_submissions[key].Point}");
        }

        int resultId = await _serveyRepository.Submit(_submissions.Values.ToList());

        _navigationManager.NavigateTo($"/result/{resultId}");
    }
}
